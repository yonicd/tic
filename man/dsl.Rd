% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsl.R
\name{dsl}
\alias{dsl}
\alias{DSL}
\alias{get_stage}
\alias{add_step}
\alias{add_code_step}
\title{tic's domain-specific language}
\usage{
get_stage(name)

add_step(stage, step)

add_code_step(stage, call = NULL, prepare_call = NULL)
}
\arguments{
\item{name}{\code{[string]}\cr
The name for the stage.}

\item{stage}{\code{[TicStage]}\cr
A \code{TicStage} object as returned by \code{get_stage()}.}

\item{step}{\code{[function]}\cr
An object of class \link{TicStep}, usually created by functions
with the \code{step_} prefix like \code{\link[=step_hello_world]{step_hello_world()}}.}

\item{call}{\code{[call]}\cr
An arbitrary R expression executed during the stage to which this step is
added.
The default is useful if you only pass \code{prepare_call}.}

\item{prepare_call}{\code{[call]}\cr
An optional arbitrary R expression executed during preparation.}
}
\description{
Functions to define stages and their constitutent
steps.
The \link{macro}s combine several steps and assign them to relevant
stages.
See \code{\link[=dsl_get]{dsl_get()}} for functions to access the storage for the stages
and their steps.

\code{get_stage()} returns a \code{TicStage} object for a stage given by name.
This function can be called directly in the \code{tic.R} configuration file,
which is processed by \code{\link[=dsl_load]{dsl_load()}}.

\code{add_step()} adds a step to a stage, see \code{\link[=step_hello_world]{step_hello_world()}}
and the links therein for available steps.

\code{add_code_step()} is a shortcut for \code{add_step(step_run_code(...))}.
}
\examples{
dsl_init()

get_stage("script")

get_stage("script") \%>\%
  add_step(step_hello_world())

get_stage("script")

get_stage("script") \%>\%
  add_code_step(print("Hi!"))

get_stage("script")
}
